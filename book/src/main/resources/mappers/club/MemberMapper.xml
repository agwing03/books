<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.books.club.member.MemberMapper">
	
	<!-- 모임 목록 -->
	<select id="selectMemberList" parameterType="project.books.club.cmmn.SrchVO" resultType="project.books.sys.util.CamelMap">
		/*MemberMapper.selectMemberList*/
		select cm.member_no 
		     , m.name as member_nm
		     , m.nick_nm 
		     , (select ccd.code_dtl_nm from cmmn_code_dtl ccd where ccd.code_dtl_id = m.sex) as sex
		     , m.brthday 
		     , concat(m.action_area_lv1, ' ', m.action_area_lv1) as area
		     , m.phon_no 
		     , date_format(cm.join_dt, '%Y-%m-%d') as join_dt 
		     , date_format(cm.frst_reg_dt, '%Y-%m-%d %H:%i:%S') as frst_reg_dt
		     , club_author_no
		  from club_member cm 
		       left join member m on cm.member_no = m.member_no 
		 where 1=1
		<if test='clubNo != null and clubNo != ""'>
		   and cm.club_no = #{clubNo} <!-- 클럽번호 -->
		</if>
		<!-- 텍스트 검색 -->
		<if test='srchGbn != null and srchGbn != "" and srchText != null and srchText != ""'>
			<if test='"NIC".equals(srchGbn)'>
		   and m.nick_nm like concat('%',#{srchText},'%')
			</if>
			<if test='"NAME".equals(srchGbn)'>
		   and m.name like concat('%',#{srchText},'%')
			</if>
			<if test='"BRTH".equals(srchGbn)'>
		   and m.brthday like concat('%',#{srchText},'%')
			</if>
			<if test='"PHON".equals(srchGbn)'>
		   and m.phon_no like concat('%',#{srchText},'%')
			</if>
		</if>
		 order by cm.club_author_no, cm.join_dt desc 
	</select>
	
	<!-- 맴버 등록 -->
	<insert id="insertMember" useGeneratedKeys="true" keyProperty="memberNo" parameterType="project.books.club.member.MemberVO">
		/*MemberMapper.insertMember*/
		insert into member (
			  member_id
			, member_pwd
			, author_id
			, nick_nm
			, name
			, sex
			, brthday
			, phon_no
			, email
			, intro
			, account_no
			, action_area_lv1
			, action_area_lv2
			, frst_reg_no
			, frst_reg_dt
		) values (
			  concat('M', date_format(now(), '%Y%m%d%H%i%S'))
			, 'test123'
			, 'MEMBER'
			, #{nickNm}
			, #{name}
			, #{sex}
			, #{brthday}
			, #{phonNo}
			, #{email}
			, #{intro}
			, #{accountNo}
			, #{actionAreaLv1}
			, #{actionAreaLv2}
			, #{userNo}
			, now()
		)
	</insert>
	
	<!-- 클럽 맴버 저장 -->
	<insert id="insertClubMember" parameterType="project.books.club.member.MemberVO">
		/*MemberMapper.insertClubMember*/
		insert into club_member(
			  club_no
			, member_no
			, nick_nm
			, join_dt
			, memo
			, club_author_no
			, frst_reg_no
			, frst_reg_dt
		)
		select #{clubNo}
		     , m.member_no 
		     , m.nick_nm 
		     , #{joinDt}
		     , #{memo}
		     , '9'
		     , #{userNo}
		     , now()
		  from member m 
		 where member_no = #{memberNo}
	</insert>
	
	<!-- 클럽 맴버 저장 -->
	<update id="updateClubMember" parameterType="project.books.club.member.MemberVO">
		/*MemberMapper.updateClubMember*/
		update club_member
		   set nick_nm		 = #{nickNm}
			, memo			 = #{memo}
			, club_author_no = #{clubAuthorNo}
			, last_upd_no 	 = #{userNo} 
			, last_upd_dt 	 = now()
		where club_no 	= #{clubNo}
		  and member_no = #{memberNo} 
	</update>
	
	<!-- 맴버 실시간 검색(공통모듈) -->
	<select id="selectMemberRealTimeSrch" parameterType="project.books.club.cmmn.SrchVO" resultType="project.books.sys.util.CamelMap">
		/*MemberMapper.selectMemberRealTimeSrch*/
		select * 
		  from (select m.member_no 
				     , concat(m.name,' • ',m.nick_nm) as member_nm
				     , ca.club_author_no 
				     , (select count(*) 
				          from meeting_member mm 
				         where mm.member_no = cm.member_no) as attend_member_cnt
				  from member m 
				       left join club_member cm 
				         on m.member_no = cm.member_no 
				       left join club_author ca 
				         on cm.club_author_no = ca.club_author_no
				 where 1=1
				<!-- 클럽번호 -->
		 		<if test='clubNo != null and clubNo != ""'>
		   		  and cm.club_no = #{clubNo}
		 		</if>
		 		<!-- 검색어 -->
		 		<if test='srchText != null and srchText != ""'>
		   		  and m.nick_nm like concat('%',#{srchText},'%')
		    		  or m.name like concat('%',#{srchText},'%')
		 		</if> 
			   )m
		 order by m.club_author_no asc, attend_member_cnt desc, member_nm asc 
	</select>
</mapper>