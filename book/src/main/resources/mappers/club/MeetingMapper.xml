<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.books.club.meeting.MeetingMapper">
	
	<!-- 모임 목록 -->
	<select id="selectMeetingList" parameterType="project.books.club.cmmn.SrchVO" resultType="project.books.sys.util.CamelMap">
		/*meetingMapper.selectMeetingList*/
		select mt.meeting_no
			 , mt.club_no 
		     , mt.title
		     , (select nick_nm from member m where m.member_no = mt.host_no) as host_nm
		     , (select ccd.code_dtl_nm from cmmn_code_dtl ccd where ccd.code_dtl_id = mt.meeting_gbn) as meeting_gbn
		     , date_format(mt.dday, '%Y-%m-%d') as dday
		     , concat(mt.hour, ':', mt.minute) as time
		     , mt.place 
		     , concat(cast((select count(*) from meeting_member mm where mm.meeting_no = mt.meeting_no) AS CHAR(2)),'/', mt.attend_cnt) as attend_cnt
		     , date_format(mt.frst_reg_dt, '%Y.%m.%d %H:%i:%S') as frst_reg_dt
		     , case when mt.dday <![CDATA[ >= ]]> date_format(now(), '%Y%m%d') then 'active'
     				when mt.dday <![CDATA[ < ]]> date_format(now(), '%Y%m%d') and mt.review_yn = 'N' then 'review'
     				else 'complete' end as state
		 	 , if(mt.review_yn = 'Y', 'true', 'false') as review_yn
		  from meeting mt
		<include refid="meeingListWhere"></include>
		 order by mt.dday desc, mt.hour desc, mt.minute desc 
	</select>
	
	<!-- 모임 목록 수 -->
	<select id="selectMeetingListCnt" parameterType="project.books.club.cmmn.SrchVO" resultType="Integer">
		/*meetingMapper.selectMeetingListCnt*/
		select count(*) 
		  from meeting mt
		<include refid="meeingListWhere"></include>
	</select>
	
	<!-- 모임 정보 -->
	<select id="selectMeeting" parameterType="project.books.club.cmmn.SrchVO" resultType="project.books.sys.util.CamelMap">
		/*meetingMapper.selectMeeting*/
		select mt.meeting_no
			 , mt.club_no 
		     , mt.title
		     , (select nick_nm from member m where m.member_no = mt.host_no) as host_nm
		     , mt.host_no
		     , mt.meeting_gbn
		     , date_format(mt.dday, '%Y.%m.%d') as dday
		     , mt.hour
			 , mt.minute
		     , mt.place 
		     , mt.attend_cnt
		     , mt.cost 
		     , c.account
		     , c.bank_cd 
		  from meeting mt
		       left join club c on c.club_no = mt.club_no 
		<include refid="meeingListWhere"></include>
	</select>
	
	<!-- 모임 목록 Where -->
	<sql id="meeingListWhere">
		where 1=1
		<!-- 클럽 번호 -->
		<if test='clubNo != null and clubNo != ""'>
		  and mt.club_no = #{clubNo}
		</if>
		<!-- 모임 번호 -->
		<if test='meetingNo != null and meetingNo != ""'>
		  and mt.meeting_no = #{meetingNo}
		</if>
		<!-- 화면 구분 -->
	  	<choose>
	  		<!-- 모임 : info -->
			<when test='srchPageGbn != null and srchPageGbn != "" and srchPageGbn == "info"'>
	      	</when>
	      	<!-- 모임 : review -->
	      	<otherwise>			
	  			<!-- 모임 구분 -->
				<if test='srchGbn != null and srchGbn != ""'>
		  and mt.meeting_gbn = #{srchGbn}
				</if>
				<!-- 검색어 -->
				<if test='srchText != null and srchText != "" and srchText != null and srchText != ""'>
					<if test='"M".equals(srchGbn)'>
		  and mt.title like concat('%',#{srchText},'%')
					</if>
					<if test='"H".equals(srchGbn)'>
		  and mt.nick_nm like concat('%',#{srchText},'%')
					</if>
					<if test='"P".equals(srchGbn)'>
		  and mt.place like concat("%",#{srchText},'%')
					</if>
				</if>
				<!-- 검색 기간 -->
				<if test='srchStartDt != null and srchStartDt != ""'>
		  and mt.dday between #{srchStartDt} and #{srchEndDt}
				</if>
	      	</otherwise>
		</choose>
	</sql>
	
	
	<!-- 모임 생성 -->
	<insert id="insertMeeting" useGeneratedKeys="true" keyProperty="meetingNo" parameterType="project.books.club.meeting.MeetingVO">
		/*meetingMapper.insertMeeting*/
		insert into meeting(
			  club_no
			, host_no
			, title
			, dday
			, hour
			, minute
			, place
			, cost
			, place_url
			, attend_cnt
			, meeting_gbn
			, frst_reg_no
			, frst_reg_dt
			, last_upd_no
			, last_upd_dt
		)values(
			  #{clubNo}
			, #{hostNo}
			, #{title}
			, #{dday}
			, #{hour}
			, #{minute}
			, #{place}
			, #{cost}
			, #{placeUrl}
			, #{attendCnt}
			, #{meetingGbn}
			, #{userNo}
			, now()
			, #{userNo}
			, now()
		)
	</insert>
	
	<!-- 모임 수정 -->
	<update id="updateMeeting" parameterType="project.books.club.meeting.MeetingVO">
		/*meetingMapper.updateMeeting*/
		update meeting
		   set last_upd_no  = #{userNo}
			 , last_upd_dt  = now()
			<if test='hostNo != null and hostNo != ""'>
		   	 , host_no = #{hostNo}
		   	</if>  
		   	<if test='title != null and title != ""'>
			 , title = #{title}
			</if>   
			<if test='dday != null and dday != ""'>
			 , dday = #{dday}
			</if>    
			<if test='hour != null and hour != ""'>
			 , hour = #{hour}
			</if>    
			<if test='minute != null and minute != ""'>
			 , minute = #{minute}
			</if> 
			<if test='place != null and place != ""'>
			 , place = #{place}
			</if>   
			<if test='cost != null and cost != ""'>
			 , cost = #{cost}
			</if>    
			<if test='placeUrl != null and placeUrl != ""'>
			 , place_url = #{placeUrl}
			</if>
			<if test='attendCnt != null and attendCnt != ""'>
			 , attend_cnt = #{attendCnt}
			</if>
			<if test='meetingGbn != null and meetingGbn != ""'> 
			 , meeting_gbn = #{meetingGbn}
			</if>
			<if test='comment != null and comment != ""'>
			 , comment = #{comment}
			</if>
			 , review_yn = 'Y'
		 where meeting_no = #{meetingNo}
	</update>
	
	<!-- 모임 삭제 -->
	<delete id="deleteMeeting" parameterType="project.books.club.meeting.MeetingVO">
		/*meetingMapper.deleteMeeting*/
		delete from meeting
		 where meeting_no = #{meetingNo}  
	</delete>
	
	<!-- 모임 참석자 목록 -->
	<select id="selectMeetingMemberList" parameterType="project.books.club.cmmn.SrchVO" resultType="Integer">
		/*meetingMapper.selectMeetingMemberList*/
		select mt.member_no
		  from meeting_member mt
		 where mt.meeting_no = #{meetingNo}
	</select>
	
	
	
	<!-- 모임 참석자 등록 -->
	<insert id="insertMeetingMember" parameterType="project.books.club.meeting.MeetingVO">
		/*meetingMapper.insertMeetingMember*/
		insert into meeting_member(
			  meeting_no
			, member_no
			, attend_yn
			, after_party_yn
			, div_amount
			, calcul_yn
			, reg_no
			, reg_dt
		)values(
			  #{meetingNo}
			, #{memberNo}
			, ifnull(#{attendYn}, 'Y')
			, ifnull(#{afterPartyYn}, 'N')
			, #{divAmount}
			, ifnull(#{calculYn}, 'N')
			, #{userNo}
			, now()
		)
	</insert>
	
	<!-- 모임 참석자 등록 -->
	<delete id="deleteMeetingMember" parameterType="project.books.club.meeting.MeetingVO">
		delete from meeting_member
		 where meeting_no = #{meetingNo}
	</delete>
	
	<!-- 모임 정보 -->
	<select id="selectMeetingInfo" parameterType="Integer" resultType="project.books.club.meeting.MeetingVO">
		/*meetingMapper.selectMeetingInfo*/
		select mt.meeting_no 	as meetingNo
			 , mt.club_no 		as clubNo
			 , mt.meeting_gbn   as meetingGbn
			 , (select code_dtl_nm 
			      from cmmn_code_dtl ccd 
			     where ccd.code_id = 'MEETING_GBN' 
			       and ccd.code_dtl_id = mt.meeting_gbn) as meetingGbnNm
			 , mt.title
			 , mt.host_no		 as hostNo
		 	 , (select concat(mb.name,'(',mb.nick_nm,')') 
		 	      from member mb 
		 	     where mb.member_no = mt.host_no) as hostNm
		 	 , date_format(mt.dday, '%Y.%m.%d') as dday
		 	 , mt.hour
			 , mt.minute
		 	 , concat(mt.hour, ':', mt.minute) as time
		 	 , mt.place
		 	 , mt.cost
		 	 , mt.place_url 	as placeUrl
		 	 , mt.attend_cnt	as attendCnt
		 	 , mt.comment
		 	 , c.account
			 , c.bank_cd 		as bankCd
		 	 , (select concat(mb.name,'(',mb.nick_nm,')') 
		 	      from member mb 
		 	     where mb.member_no = mt.frst_reg_no) 			as frstRegNm
		 	 , date_format(mt.frst_reg_dt, '%Y.%m.%d %H:%i:%S') as frstRegDt
		 	 , (select concat(mb.name,'(',mb.nick_nm,')') 
		 	      from member mb 
		 	     where mb.member_no = mt.last_upd_no) 			as lastUpdNm
		 	 , date_format(mt.last_upd_dt, '%Y.%m.%d %H:%i:%S') as lastUpdDt
		  from meeting mt
		  	   left join club c on c.club_no = mt.club_no
		 where mt.meeting_no = #{meetingNo}
	</select>
	
	<!-- 모임 맴버별 한줄평 -->
	<select id="selectMeetingReviewList" parameterType="Integer" resultType="project.books.sys.util.CamelMap">
		/*meetingMapper.selectMeetingReviewList*/
		select mm.meeting_no
			 , mm.member_no 
			 , concat(m.name,'(',m.nick_nm,')') as member_nm
		     , ifnull(bv.eval_no, '') as eval_no
		     , ifnull(bv.book_no, '') as book_no 
		     , ifnull( bk.book_title, '') as book_title
		     , ifnull(bk.book_writer, '') as book_writer
		     , concat(bk.book_title , '(', bk.book_writer, ')') as book_info 
		 	 , ifnull(bv.book_eval, '') as book_eval
		 	 , ifnull(bv.book_score, '') as book_score
		 	 , bv.progress_yn
		  from meeting_member mm
		       left join member m 
		       	 on m.member_no = mm.member_no 
		       left join books_eval bv
		         on mm.meeting_no = bv.meeting_no 
		        and mm.member_no = bv.member_no 
		       left join books bk
		         on bk.book_no = bv.book_no 
		 where mm.meeting_no = #{meetingNo}
	</select>
	
	<!-- 모임후기 대상 목록 -->
	<select id="selectMeetingPopupList" resultType="project.books.sys.util.CamelMap">
		/*meetingMapper.selectMeetingPopupList*/
		select *
		  from (select mt.meeting_no
		     		 , mt.title
		     		 , mt.club_no 
		     		 , (select count(*) from meeting_member mm where mm.meeting_no = mt.meeting_no) as attend_meber_cnt
		     		 , mt.attend_cnt
		     		 , case when mt.dday <![CDATA[ >= ]]> date_format(now(), '%Y%m%d') then 'active'
							when mt.dday <![CDATA[ < ]]>  date_format(now(), '%Y%m%d') and mt.review_yn = 'N' then 'review'
							else 'complete' end as state
		  			 , mt.dday
		  		  from meeting mt
		  		 where 1=1
				<if test='clubNo != null and clubNo != ""'>
				   and mt.club_no = #{clubNo}
				</if>
			   ) mt
		 where mt.state = 'review'
		 order by mt.dday desc 
	</select>
</mapper>