<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.books.club.book.BookMapper">
	
	<!-- 도서 목록 -->
	<select id="selectBookList" parameterType="project.books.club.book.BookVO" resultType="project.books.sys.util.CamelMap">
		/*BookMapper.selectBookList*/
		select * from (
			select b.book_no 
			     , b.book_title 
			     , b.book_writer
			     , (select count(*) from books_eval be where b.book_no = be.book_no) as book_app
			     , ifnull((select avg(be.book_score) from books_eval be where b.book_no = be.book_no), 0) as book_avg
			     , date_format(b.frst_reg_dt, '%Y-%m-%d %H:%i:%S') as frst_reg_dt  
			  from books b
			<include refid="bookListWhere"></include>
		       ) b
		 order by b.book_app desc, b.book_avg desc, b.book_title asc
	</select>
	
	<!-- 도서 목록 수 -->
	<select id="selectBookListCnt" parameterType="project.books.club.book.BookVO" resultType="Integer">
		/*BookMapper.selectBookListCnt*/
		select count(*) 
		  from books b
		<include refid="bookListWhere"></include>
	</select>
	
	<!-- 도서 목록 Where -->
	<sql id="bookListWhere">
		where 1=1
		<!-- 텍스트 검색 -->
		<if test='srchGbn != null and srchGbn != "" and srchText != null and srchText != ""'>
			<if test='"B".equals(srchGbn)'>
		  and b.book_title like concat('%',#{srchText},'%')
			</if>
			<if test='"W".equals(srchGbn)'>
		  and b.book_writer like concat('%',#{srchText},'%')
			</if>
		</if>
	</sql>
	
	<!-- 도서 등록 -->
	<insert id="insertBook" parameterType="java.util.HashMap">
		/*BookMapper.insertBook*/
		insert into books (
			  book_title
			, book_writer
			, public_dt
			, frst_reg_no
			, frst_reg_dt
			, last_upd_no
			, last_upd_dt
		) values (
			  #{data1}
			, #{data2}
			, #{data3}
			, #{userNo}
			, now()
			, #{userNo}
			, now()
		)
	</insert>
	
	<!-- 도서 수정 -->
	<update id="updateBook" parameterType="java.util.HashMap">
		/*BookMapper.updateBook*/
		update books 
		   set book_title 	= #{data2}
			 , book_writer	= #{data3}
			 , public_dt	= #{data4}
		 where book_no 		= #{data1}
	</update>
	
	<!-- 도서 삭제 -->
	<delete id="deleteBook" parameterType="java.util.HashMap">
		/*BookMapper.deleteBook*/
		delete from books 
		 where book_no = #{data1}
	</delete>
	
</mapper>