<?xml version="1.0" encoding="UTF-8"?>
 <!-- 로그 레벨 -->
    <!--
    	1) ERROR : 오류 메시지 표시 
        2) WARN  : 경고성 메시지 표시
        3) INFO  : 정보성 메시지 표시
        4) DEBUG : 디버깅하기 위한 메시지 표시
        5) TRACE :  Debug보다 훨씬 상세한 메시지 표시
        
        아래에서는 info로 설정하였는데, 이 경우엔 INFO 보다 위에 있는 DEBUG와 TRACE는 표시하지 않는다.
    -->
<configuration debug="true"> 

    <!-- Appenders -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>%d %5p [%c] %m%n</Pattern>
        </encoder>
    </appender>

    <appender name="console-infolog" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>%d %5p %m%n</Pattern>
        </encoder>
    </appender>
    <!-- 로그가 발생할때마다 file에 추가하여 써내려감. -->
    <appender name="rolling" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>C:\boot\log\tccLog.log</file>
        <encoder>
        	<!-- 이 옵션이 없는 경우 한글이 꺠지는 경우가 있음 -->
        	<charset>UTF-8</charset>
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <!-- 시간 단위로 로그를 백업할것임을 명시함. -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        	<!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>C:\boot\log\tccLog-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!-- 지정한 파일크기 or 일수가 지나면 자동으로 파일을 설정한 파일로 백업함. -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<!-- 파일당 최고 용량 10kb, mb , gb -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
             	<!-- 일자별 로그파일 최대 보관주기(~일)-->
             	<!-- maxHistory 를 30으로 설정하여서 로그 파일을 현재 날짜 기준으로 30일까지 보관하며 그 이후 로그 파일은 오래된 파일부터 삭제합니다. -->
                <maxHistory>30</maxHistory>
                <!-- 최소 갯수 및 최대 갯수 설정 -->
	             <!--<MinIndex>1</MinIndex>
	            <MaxIndex>10</MaxIndex>-->
	            <!-- totalSizeCap 사용하기 위해서는 maxHistroy 부터 설정해야함 -->
	            <!-- 로그 파일 전체자 2GB를 넘어가면 오래된 로그 파일부터 삭제함 -->
	            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
    </appender>
    
    
    <!-- 에러의 경우 파일에 로그 처리 -->
    <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<!-- 필터는 로그레벨에 따라 필터 할 것인지 말것인지 결정. -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>C:\boot\errorLog\errorLog.log</file>
        <encoder>
        	<!-- 이 옵션이 없는 경우 한글이 꺠지는 경우가 있음 -->
        	<charset>UTF-8</charset>
           <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <!-- 시간 단위로 로그를 백업할것임을 명시함. -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>C:\boot\errorLog\errorLog.%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
            <!-- 지정한 파일크기 or 일수가 지나면 자동으로 파일을 설정한 파일로 백업함. -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 파일당 최고 용량 kb, mb, gb -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 일자별 로그파일 최대 보관주기(~일)-->
            <!-- maxHistory 를 30으로 설정하여서 로그 파일을 현재 날짜 기준으로 30일까지 보관하며 그 이후 로그 파일은 오래된 파일부터 삭제합니다. -->
            <maxHistory>30</maxHistory>
            <!-- 최소 갯수 및 최대 갯수 설정 -->
             <!--<MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>-->
            <!-- totalSizeCap 사용하기 위해서는 maxHistroy 부터 설정해야함 -->
            <!-- 로그 파일 전체자 2GB를 넘어가면 오래된 로그 파일부터 삭제함 -->
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- Logger -->
    <logger name="com.tccins.template" level="DEBUG" appender-ref="console" />
    <logger name="jdbc.sqlonly" level="INFO" appender-ref="console-infolog" />
    <logger name="jdbc.resultsettable" level="INFO" appender-ref="console-infolog" />
    
    <!-- Root Logger -->
    <root level="off">
        <appender-ref ref="console" />
        <appender-ref ref="rolling"/>
        <!-- 루트 level을 on하면 모든 로그가 다 찎혀 너무 길어져서 에러만 따로 설정 -->
        <appender-ref ref="Error" level="error"/>
    </root>
</configuration>